{"config":{"lang":["en","es","zh"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>SynchDB is a PostgreSQL extension for synchronizing data from different database sources.</p>"},{"location":"#introduction","title":"Introduction","text":"<p>SynchDB is a PostgreSQL extension designed to replicate data from one or more heterogeneous databases (such as MySQL, MS SQLServer, Oracle, etc.) directly to PostgreSQL in a fast and reliable way. PostgreSQL serves as the destination from multiple heterogeneous database sources. No middleware or third-party software is required to orchestrate the data synchronization between heterogeneous databases and PostgreSQL. SynchDB extension itself is capable of handling all the data synchronization needs.</p> <p>It provides two key work modes that can be invoked using the built-in SQL functions: * Sync mode (for initial data synchronization) * Follow mode (for replicate incremental changes after initial sync)</p> <p>Sync mode copies tables from heterogeneous database into PostgreSQL, including its schema, indexes, triggers, other table properties as well as current data it holds. Follow mode subscribes to tables in a heterogeneous database to obtain incremental changes and apply them to the same tables in PostgreSQL, similar to PostgreSQL logical replication</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Efficient data synchronization</li> <li>Support for multiple database sources</li> <li>Easy integration with existing PostgreSQL databases</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<p>Check out our Installation Guide to get started with SynchDB.</p>"},{"location":"User%20Guide/","title":"The User guide Home","text":""},{"location":"User%20Guide/installation/","title":"Installation","text":""},{"location":"User%20Guide/installation/#requirement","title":"Requirement","text":"<p>The following software is required to build and run SynchDB. The versions listed are the versions tested during development. Older versions may still work. * Java Development Kit 22. Download here * Apache Maven 3.9.8. Download here * PostgreSQL 16.3 Source. Git clone here. Refer to this wiki for PostgreSQL build requirements * Docker compose 2.28.1 (for testing). Refer to here * Unix based operating system like Ubuntu 22.04 or MacOS</p>"},{"location":"User%20Guide/installation/#build-procedure","title":"Build Procedure","text":""},{"location":"User%20Guide/installation/#prepare-source","title":"Prepare Source","text":"<p>Clone the PostgreSQL source and switch to 16.3 release tag <pre><code>git clone https://github.com/postgres/postgres.git\ncd postgres\ngit checkout REL_16_3\n</code></pre></p> <p>Clone the SynchDB source from within the extension folder Note: Branch (synchdb-devel)[https://github.com/Hornetlabs/synchdb/tree/synchdb-devel] is used for development so far. <pre><code>cd contrib/\ngit clone https://github.com/Hornetlabs/synchdb.git\n</code></pre></p>"},{"location":"User%20Guide/installation/#prepare-tools","title":"Prepare Tools","text":""},{"location":"User%20Guide/installation/#maven","title":"Maven","text":"<p>If you are working on Ubuntu 22.04.4 LTS, install the Maven as below: <pre><code>sudo apt install maven\n</code></pre></p> <p>if you are using MacOS, you can use the brew command to install maven (refer (here)[https://brew.sh/] for how to install Homebrew) without any other settings: <pre><code>brew install maven\n</code></pre></p>"},{"location":"User%20Guide/installation/#install-java-sdk-openjdk","title":"Install Java SDK (OpenJDK)","text":"<p>If you are working on Ubuntu 22.04.4 LTS, install the OpenJDK  as below: <pre><code>sudo apt install openjdk-21-jdk\n</code></pre></p> <p>If you are working on MacOS, please install the JDK with brew command: <pre><code>brew install openjdk@22\n</code></pre></p>"},{"location":"User%20Guide/installation/#build-and-install-postgresql","title":"Build and Install PostgreSQL","text":"<p>This can be done by following the standard build and install procedure as described here. Generally, it consists of:</p> <pre><code>cd /home/$USER/postgres\n./configure\nmake\nsudo make install\n</code></pre> <p>You should build and install the default extensions as well: <pre><code>cd /home/$USER/postgres/contrib\nmake\nsudo make install\n</code></pre></p>"},{"location":"User%20Guide/installation/#build-debezium-runner-engine","title":"Build Debezium Runner Engine","text":"<p>With Java and Maven setup, we are ready to build Debezium Runner Engine. This installs the Debezium Runner Engine jar file to your PostgreSQL's lib folder.</p> <pre><code>cd /home/$USER/postgres/contrib/synchdb\nmake build_dbz\nsudo make install_dbz\n</code></pre>"},{"location":"User%20Guide/installation/#build-synchdb-postgresql-extension","title":"Build SynchDB PostgreSQL Extension","text":"<p>With the Java <code>lib</code> and <code>include</code> installed in your system, SynchDB can be built by:</p> <pre><code>cd /home/$USER/postgres/contrib/synchdb\nmake\nsudo make install\n</code></pre>"},{"location":"User%20Guide/installation/#configure-your-linker-ubuntu","title":"Configure your Linker (Ubuntu)","text":"<p>Lastly, we also need to tell your system's linker where the newly added Java library is located in your system.</p> <p><pre><code># Dynamically set JDK paths\nJAVA_PATH=$(which java)\nJDK_HOME_PATH=$(readlink -f ${JAVA_PATH} | sed 's:/bin/java::')\nJDK_LIB_PATH=${JDK_HOME_PATH}/lib\n\necho $JDK_LIB_PATH\necho $JDK_LIB_PATH/server\n\nsudo echo \"$JDK_LIB_PATH\" \uff5c sudo tee -a /etc/ld.so.conf.d/x86_64-linux-gnu.conf\nsudo echo \"$JDK_LIB_PATH/server\" | sudo tee -a /etc/ld.so.conf.d/x86_64-linux-gnu.conf\n</code></pre> Note, for mac with M1/M2 chips, you need to the two lines into /etc/ld.so.conf.d/aarch64-linux-gnu.conf</p> <p>Run ldconfig to reload: <pre><code>sudo ldconfig\n</code></pre></p> <p>Ensure synchdo.so extension can link to libjvm Java library on your system: <pre><code>ldd synchdb.so\n        linux-vdso.so.1 (0x00007ffeae35a000)\n        libjvm.so =&gt; /usr/lib/jdk-22.0.1/lib/server/libjvm.so (0x00007fc1276c1000)\n        libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007fc127498000)\n        libdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x00007fc127493000)\n        libpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007fc12748e000)\n        librt.so.1 =&gt; /lib/x86_64-linux-gnu/librt.so.1 (0x00007fc127489000)\n        libm.so.6 =&gt; /lib/x86_64-linux-gnu/libm.so.6 (0x00007fc1273a0000)\n        /lib64/ld-linux-x86-64.so.2 (0x00007fc128b81000)\n</code></pre></p>"},{"location":"architecture/architecture/","title":"SynchDB Architecture","text":""},{"location":"es/","title":"Bienvenido a SynchDB","text":"<p>SynchDB es una extensi\u00f3n de PostgreSQL para sincronizar datos de diferentes fuentes de bases de datos.</p>"},{"location":"es/#introduccion","title":"Introducci\u00f3n","text":"<p>SynchDB es una extensi\u00f3n de PostgreSQL dise\u00f1ada para replicar datos de una o m\u00e1s bases de datos heterog\u00e9neas (como MySQL, MS SQLServer, Oracle, etc.) directamente a PostgreSQL de una manera r\u00e1pida y confiable. PostgreSQL sirve como destino de m\u00faltiples fuentes de bases de datos heterog\u00e9neas. No se requiere ning\u00fan middleware ni software de terceros para orquestar la sincronizaci\u00f3n de datos entre bases de datos heterog\u00e9neas y PostgreSQL. La extensi\u00f3n SynchDB en s\u00ed es capaz de manejar todas las necesidades de sincronizaci\u00f3n de datos.</p> <p>Proporciona dos modos de trabajo clave que se pueden invocar utilizando las funciones SQL integradas: * Modo de sincronizaci\u00f3n (para la sincronizaci\u00f3n de datos inicial) * Modo de seguimiento (para replicar cambios incrementales despu\u00e9s de la sincronizaci\u00f3n inicial)</p> <p>El modo de sincronizaci\u00f3n copia tablas de bases de datos heterog\u00e9neas a PostgreSQL, incluido su esquema, \u00edndices, activadores, otras propiedades de tabla, as\u00ed como los datos actuales que contiene. El modo de seguimiento se suscribe a las tablas de una base de datos heterog\u00e9nea para obtener cambios incrementales y aplicarlos a las mismas tablas en PostgreSQL, de forma similar a la replicaci\u00f3n l\u00f3gica de PostgreSQL</p>"},{"location":"es/#caracteristicas","title":"Caracter\u00edsticas","text":"<ul> <li>Sincronizaci\u00f3n de datos eficiente</li> <li>Compatibilidad con m\u00faltiples fuentes de bases de datos</li> <li>Integraci\u00f3n sencilla con bases de datos PostgreSQL existentes</li> </ul>"},{"location":"es/#primeros-pasos","title":"Primeros pasos","text":"<p>Consulte nuestra Gu\u00eda de instalaci\u00f3n para comenzar a utilizar SynchDB.</p>"},{"location":"es/architecture/architecture/","title":"Arquitectura de SynchDB","text":""},{"location":"zh/","title":"\u4e3b\u9875","text":""},{"location":"zh/#_2","title":"\u7b80\u4ecb","text":"<p>SynchDB \u662f\u4e00\u4e2a PostgreSQL \u6269\u5c55\uff0c\u65e8\u5728\u4ee5\u5feb\u901f\u53ef\u9760\u7684\u65b9\u5f0f\u5c06\u6570\u636e\u4ece\u4e00\u4e2a\u6216\u591a\u4e2a\u5f02\u6784\u6570\u636e\u5e93\uff08\u5982 MySQL\u3001MS SQLServer\u3001Oracle \u7b49\uff09\u76f4\u63a5\u590d\u5236\u5230 PostgreSQL\u3002PostgreSQL \u662f\u591a\u4e2a\u5f02\u6784\u6570\u636e\u5e93\u6e90\u7684\u76ee\u6807\u3002\u65e0\u9700\u4e2d\u95f4\u4ef6\u6216\u7b2c\u4e09\u65b9\u8f6f\u4ef6\u6765\u534f\u8c03\u5f02\u6784\u6570\u636e\u5e93\u548c PostgreSQL \u4e4b\u95f4\u7684\u6570\u636e\u540c\u6b65\u3002SynchDB \u6269\u5c55\u672c\u8eab\u80fd\u591f\u5904\u7406\u6240\u6709\u6570\u636e\u540c\u6b65\u9700\u6c42\u3002</p> <p>\u5b83\u63d0\u4f9b\u4e86\u4e24\u79cd\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e SQL \u51fd\u6570\u8c03\u7528\u7684\u5173\u952e\u5de5\u4f5c\u6a21\u5f0f\uff1a * \u540c\u6b65\u6a21\u5f0f\uff08\u7528\u4e8e\u521d\u59cb\u6570\u636e\u540c\u6b65\uff09 * \u8ddf\u968f\u6a21\u5f0f\uff08\u7528\u4e8e\u590d\u5236\u521d\u59cb\u540c\u6b65\u540e\u7684\u589e\u91cf\u66f4\u6539\uff09</p> <p>\u540c\u6b65\u6a21\u5f0f\u5c06\u8868\u4ece\u5f02\u6784\u6570\u636e\u5e93\u590d\u5236\u5230 PostgreSQL\uff0c\u5305\u62ec\u5176\u67b6\u6784\u3001\u7d22\u5f15\u3001\u89e6\u53d1\u5668\u3001\u5176\u4ed6\u8868\u5c5e\u6027\u4ee5\u53ca\u5b83\u6240\u4fdd\u5b58\u7684\u5f53\u524d\u6570\u636e\u3002 \u5173\u6ce8\u6a21\u5f0f\u8ba2\u9605\u5f02\u6784\u6570\u636e\u5e93\u4e2d\u7684\u8868\u4ee5\u83b7\u53d6\u589e\u91cf\u66f4\u6539\u5e76\u5c06\u5176\u5e94\u7528\u4e8e PostgreSQL \u4e2d\u7684\u76f8\u540c\u8868\uff0c\u7c7b\u4f3c\u4e8e PostgreSQL \u903b\u8f91\u590d\u5236</p>"},{"location":"zh/#_3","title":"\u529f\u80fd","text":"<ul> <li>\u9ad8\u6548\u7684\u6570\u636e\u540c\u6b65</li> <li>\u652f\u6301\u591a\u4e2a\u6570\u636e\u5e93\u6e90</li> <li>\u8f7b\u677e\u4e0e\u73b0\u6709 PostgreSQL \u6570\u636e\u5e93\u96c6\u6210</li> </ul>"},{"location":"zh/#_4","title":"\u5165\u95e8","text":"<p>\u67e5\u770b\u6211\u4eec\u7684 \u5b89\u88c5\u6307\u5357 \u4ee5\u5f00\u59cb\u4f7f\u7528 SynchDB\u3002</p>"},{"location":"zh/changelog/","title":"\u53d8\u66f4\u65e5\u5fd7","text":""},{"location":"zh/User%20Guide/","title":"User guide home","text":""},{"location":"zh/architecture/architecture/","title":"SynchDB \u67b6\u6784","text":""}]}