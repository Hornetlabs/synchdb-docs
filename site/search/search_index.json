{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to SynchDB","text":"<p>SynchDB is a PostgreSQL extension for synchronizing data from different database sources.</p>"},{"location":"#introduction","title":"Introduction","text":"<p>SynchDB is a PostgreSQL extension designed to replicate data from one or more heterogeneous databases (such as MySQL, MS SQLServer, Oracle, etc.) directly to PostgreSQL in a fast and reliable way. PostgreSQL serves as the destination from multiple heterogeneous database sources. No middleware or third-party software is required to orchestrate the data synchronization between heterogeneous databases and PostgreSQL. SynchDB extension itself is capable of handling all the data synchronization needs.</p> <p>It provides two key work modes that can be invoked using the built-in SQL functions: * Sync mode (for initial data synchronization) * Follow mode (for replicate incremental changes after initial sync)</p> <p>Sync mode copies tables from heterogeneous database into PostgreSQL, including its schema, indexes, triggers, other table properties as well as current data it holds. Follow mode subscribes to tables in a heterogeneous database to obtain incremental changes and apply them to the same tables in PostgreSQL, similar to PostgreSQL logical replication</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Efficient data synchronization</li> <li>Support for multiple database sources</li> <li>Easy integration with existing PostgreSQL databases</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<p>Check out our Installation Guide to get started with SynchDB.</p>"},{"location":"user-guide/installation/","title":"Installation","text":""},{"location":"user-guide/installation/#requirement","title":"Requirement","text":"<p>The following software is required to build and run SynchDB. The versions listed are the versions tested during development. Older versions may still work. * Java Development Kit 22. Download here * Apache Maven 3.9.8. Download here * PostgreSQL 16.3 Source. Git clone here. Refer to this wiki for PostgreSQL build requirements * Docker compose 2.28.1 (for testing). Refer to here * Unix based operating system like Ubuntu 22.04 or MacOS</p>"},{"location":"user-guide/installation/#build-procedure","title":"Build Procedure","text":""},{"location":"user-guide/installation/#prepare-source","title":"Prepare Source","text":"<p>Clone the PostgreSQL source and switch to 16.3 release tag <pre><code>git clone https://github.com/postgres/postgres.git\ncd postgres\ngit checkout REL_16_3\n</code></pre></p> <p>Clone the SynchDB source from within the extension folder Note: Branch (synchdb-devel)[https://github.com/Hornetlabs/synchdb/tree/synchdb-devel] is used for development so far. <pre><code>cd contrib/\ngit clone https://github.com/Hornetlabs/synchdb.git\n</code></pre></p>"},{"location":"user-guide/installation/#prepare-tools","title":"Prepare Tools","text":""},{"location":"user-guide/installation/#maven","title":"Maven","text":"<p>If you are working on Ubuntu 22.04.4 LTS, install the Maven as below: <pre><code>sudo apt install maven\n</code></pre></p> <p>if you are using MacOS, you can use the brew command to install maven (refer (here)[https://brew.sh/] for how to install Homebrew) without any other settings: <pre><code>brew install maven\n</code></pre></p>"},{"location":"user-guide/installation/#install-java-sdk-openjdk","title":"Install Java SDK (OpenJDK)","text":"<p>If you are working on Ubuntu 22.04.4 LTS, install the OpenJDK  as below: <pre><code>sudo apt install openjdk-21-jdk\n</code></pre></p> <p>If you are working on MacOS, please install the JDK with brew command: <pre><code>brew install openjdk@22\n</code></pre></p>"},{"location":"user-guide/installation/#build-and-install-postgresql","title":"Build and Install PostgreSQL","text":"<p>This can be done by following the standard build and install procedure as described here. Generally, it consists of:</p> <pre><code>cd /home/$USER/postgres\n./configure\nmake\nsudo make install\n</code></pre> <p>You should build and install the default extensions as well: <pre><code>cd /home/$USER/postgres/contrib\nmake\nsudo make install\n</code></pre></p>"},{"location":"user-guide/installation/#build-debezium-runner-engine","title":"Build Debezium Runner Engine","text":"<p>With Java and Maven setup, we are ready to build Debezium Runner Engine. This installs the Debezium Runner Engine jar file to your PostgreSQL's lib folder.</p> <pre><code>cd /home/$USER/postgres/contrib/synchdb\nmake build_dbz\nsudo make install_dbz\n</code></pre>"},{"location":"user-guide/installation/#build-synchdb-postgresql-extension","title":"Build SynchDB PostgreSQL Extension","text":"<p>With the Java <code>lib</code> and <code>include</code> installed in your system, SynchDB can be built by:</p> <pre><code>cd /home/$USER/postgres/contrib/synchdb\nmake\nsudo make install\n</code></pre>"},{"location":"user-guide/installation/#configure-your-linker-ubuntu","title":"Configure your Linker (Ubuntu)","text":"<p>Lastly, we also need to tell your system's linker where the newly added Java library is located in your system.</p> <p><pre><code># Dynamically set JDK paths\nJAVA_PATH=$(which java)\nJDK_HOME_PATH=$(readlink -f ${JAVA_PATH} | sed 's:/bin/java::')\nJDK_LIB_PATH=${JDK_HOME_PATH}/lib\n\necho $JDK_LIB_PATH\necho $JDK_LIB_PATH/server\n\nsudo echo \"$JDK_LIB_PATH\" \uff5c sudo tee -a /etc/ld.so.conf.d/x86_64-linux-gnu.conf\nsudo echo \"$JDK_LIB_PATH/server\" | sudo tee -a /etc/ld.so.conf.d/x86_64-linux-gnu.conf\n</code></pre> Note, for mac with M1/M2 chips, you need to the two lines into /etc/ld.so.conf.d/aarch64-linux-gnu.conf</p> <p>Run ldconfig to reload: <pre><code>sudo ldconfig\n</code></pre></p> <p>Ensure synchdo.so extension can link to libjvm Java library on your system: <pre><code>ldd synchdb.so\n        linux-vdso.so.1 (0x00007ffeae35a000)\n        libjvm.so =&gt; /usr/lib/jdk-22.0.1/lib/server/libjvm.so (0x00007fc1276c1000)\n        libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007fc127498000)\n        libdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x00007fc127493000)\n        libpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007fc12748e000)\n        librt.so.1 =&gt; /lib/x86_64-linux-gnu/librt.so.1 (0x00007fc127489000)\n        libm.so.6 =&gt; /lib/x86_64-linux-gnu/libm.so.6 (0x00007fc1273a0000)\n        /lib64/ld-linux-x86-64.so.2 (0x00007fc128b81000)\n</code></pre></p>"}]}